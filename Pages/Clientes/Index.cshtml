@page
@model Lingzu.Pages.Clientes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<div class="container mt-4 mb-4 text-center">
    <div class="card rounded">
        <div class="card-header bg-dark text-light">
            <h3 class="mb-0">
                <i class="fas fa-users"></i> Clientes
            </h3>
        </div>
        <div class="card-body">
            <form class="form-inline">
                <div class="input-group">
                    <input type="text" class="form-control" id="SearchString" placeholder="Buscar" asp-for="SearchString" />
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> Filtrar
                        </button>
                    </div>
                </div>
            </form>
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.ClienteP[0].ApellidoP)
                        </th scope="col">
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Cliente[0].ApellidoM)
                        </th scope="col">
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Cliente[0].Nombre)
                        </th scope="col">
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.Cliente[0].Nit)
                        </th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
    @foreach (var item in Model.ClienteP)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ApellidoP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApellidoM)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nit)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ClienteId" class="btn btn-sm btn-info"><i class="fas fa-edit"></i> Editar</a> |
                <a asp-page="./Details" asp-route-id="@item.ClienteId" class="btn btn-sm btn-primary"><i class="fas fa-info-circle"></i> Detalles</a> |
                <a asp-page="./Delete" asp-route-id="@item.ClienteId" class="btn btn-sm btn-danger"><i class="fas fa-trash"></i> Eliminar</a>
            </td>
        </tr>
    }
</tbody>
            </table>
            <!--<a asp-page="Create" class="btn btn-primary w-100">
                <i class="fas fa-plus"></i> Nuevo
            </a>-->
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            @{
                var prevDisabled = !Model.ClienteP.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.ClienteP.HasNextPage ? "disabled" : "";
            }
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.ClienteP.PageIndex - 1)"
               asp-route-currentFilter="@Model.CurrentFilter"
               class="btn btn-primary @prevDisabled">
                Anterior
            </a>
            <a asp-page="./Index"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.ClienteP.PageIndex + 1)"
               asp-route-currentFilter="@Model.CurrentFilter"
               class="btn btn-primary @nextDisabled">
                Siguiente
            </a>
        </div>
    </div>
</div>
